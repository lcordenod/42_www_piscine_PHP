
<- Vector ----------------------------------------------------------------------
The Vector class allows us to represent directions of the points we want to place with our Vertex (see previous ex)

A Vector is represented by the following characteristics:
- 'x' magnitude
- 'y' magnitude
- 'z' magnitude
- 'w' coordinate

An instance of Vector can be constructed from an array of two 2 Vertex as per this example:
$vtcXunit = new Vector( array( 'orig' => $vtxO, 'dest' => $vtxX ) );

- The 'dest' Vertex is mandatory and represents the destination of the Vector
- The 'orig' Vertex is optional and represents the origin of the Vector

If not set, the 'orig' Vertex will default to a fresh instance with x=0, y=0, z=0, w=1

The class provides a wide range of functions including:
- Get corresponding x, y, z, w values using getX(), getY(), getZ(), getW() (this takes no argument)
- A magnitude() function that returns (float) the length or 'norm' of a vector (this takes no argument)
- A normalize() function that returns (Vector) the normalized vector, if already normalized, it returns a fresh copy of the vector (this takes no argument)
- A add(Vector $rhs) function that returns (Vector) the sum of two Vectors (this $rhs takes a Vector as an argument)
- A sub(Vector $rhs) function that returns (Vector) the substraction of two Vectors (this $rhs takes a Vector as an argument)
- A oppostite() function that returns (Vector) the opposite of the Vector (basically Vector * -1) (this takes no argument)
- A scalarProduct(Vector $k) function that returns (Vector) the product of a Vector with a scalar (this $k is the argument representing the scalar)
- A dotProduct(Vector $rhs) function that returns (float) the scalar product of two Vectors (this $rhs takes a Vector as an argument)
- A cos(Vector $rhs) function that returns (float) the cosinus of two Vectors angle (this $rhs takes a Vector as an argument)
- A crossProduct(Vector $rhs) function that returns (Vector) the cross product of two Vectors using right hand rule (this $rhs takes a Vector as an argument)
---------------------------------------------------------------------- Vector ->